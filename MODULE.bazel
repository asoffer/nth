bazel_dep(name = "abseil-cpp", version = "20240722.0")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "toolchains_llvm", version = "1.3.0")

bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93",
)

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "19.1.3",
    cxx_standard = {"": "c++20"},
    compile_flags = {"": [
        # Security
        "-U_FORTIFY_SOURCE",  # https://github.com/google/sanitizers/issues/247
        "-fstack-protector",
        "-fno-omit-frame-pointer",

        # Diagnostics
        "-fcolor-diagnostics",
        "-Wall",
        "-Wthread-safety",
        "-Wself-assign",
        "-Werror",
        "-Wextra",
        "-Wpedantic",
        "-Wuninitialized",
        "-Wno-c++2b-extensions",
        "-Wno-deprecated-declarations",
        "-Wno-gcc-compat",
        "-Wno-gnu-statement-expression-from-macro-expansion",
        "-Wno-missing-field-initializers",
        "-Wno-unused-parameter",
        "-Wno-deprecated",
        "-Wl,--allow-shlib-undefined",
        "-Wno-unused-command-line-argument",

        # Miscellaneous
        "-faligned-allocation",
    ]}
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")
